name: Build and test for win/osx/linux; build for ARM

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  fmt:
    name: cargo-fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Update toolchain & add rustfmt
        run: |
          rustup update
          rustup component add rustfmt
      - name: Run rustfmt
        run: cargo fmt --all --check

  test-x86_64:
    name: Test x86_64
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install build dependencies
        run: |
          sudo apt -qq update
          sudo apt -y install pkg-config gcc clang mold libclang-dev librust-alsa-sys-dev
        if: startsWith(matrix.os, 'ubuntu')
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{matrix.target}}
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      - name: Check out source
        uses: actions/checkout@v4
      - name: Set version environment variable
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
        # https://stackoverflow.com/a/65972328/344467
        run: |
          echo 'GIT_REV_PARSE<<QQEOFQQ' >> $GITHUB_ENV
          git rev-parse --short HEAD    >> $GITHUB_ENV
          echo 'QQEOFQQ'                >> $GITHUB_ENV
      - name: Build debug
        run: cargo build --target ${{ matrix.target }}
      - name: Build and test release
        run: cargo test --workspace --release --target ${{ matrix.target }}

  build-cross:
    name: Build (but don't test) ${{matrix.target}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu     # ARM Chromebooks & 64-bit RPi
          - armv7-unknown-linux-gnueabihf # Raspberry Pi 3/4 32-bit
          #- riscv64gc-unknown-linux-gnu   # The future!
    steps:
      - name: Install build dependencies
        run: |
          sudo apt -qq update
          sudo apt -y install pkg-config gcc clang mold libclang-dev librust-alsa-sys-dev
      - uses: actions/checkout@v4
      - uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{matrix.target}}
      - name: Set version environment variable
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
        # https://stackoverflow.com/a/65972328/344467
        run: |
          echo 'GIT_REV_PARSE<<QQEOFQQ' >> $GITHUB_ENV
          git rev-parse --short HEAD    >> $GITHUB_ENV
          echo 'QQEOFQQ'                >> $GITHUB_ENV
  
  build-macos:
    name: Build (but don't test) ${{matrix.target}}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-apple-darwin          # ARM OS X
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{matrix.target}}
      - name: Set version environment variable
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
        # https://stackoverflow.com/a/65972328/344467
        run: |
          echo 'GIT_REV_PARSE<<QQEOFQQ' >> $GITHUB_ENV
          git rev-parse --short HEAD    >> $GITHUB_ENV
          echo 'QQEOFQQ'                >> $GITHUB_ENV
      - name: Build debug
        run: cargo build --target ${{ matrix.target }}
